{"version":3,"sources":["components/Graph.js","components/Card.js","App.js","serviceWorker.js","index.js"],"names":["Graph","useState","dayta","setDayta","setLoaded","setRecent","setYesterday","useEffect","axios","get","then","result","data","cummulativeData","map","datapoint","reverse","cummulativeDates","label","ctx","document","getElementById","labels","entry","datasets","backgroundColor","borderColor","fill","lineTension","cluster_data","Chart","type","options","title","display","text","scales","xAxes","scaleLabel","labelString","yAxes","style","width","height","marginTop","border","background","borderRadius","id","Carde","recent","yesterday","kepayan","onClick","window","open","Card","body","inverse","CardTitle","textAlign","CardText","time","moment","_i","split","montMapper","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","color","parseInt","App","deets","setDeets","setKepayan","cummulativeKepayan","overflowX","overflowY","paddingLeft","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c99dab56.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport Chart from 'chart.js'\nimport axios from 'axios'\n\nconst Graph = () => {\n    const [dayta, setDayta] = useState([])\n    const [loaded, setLoaded] = useState(false)\n    const [recent, setRecent] = useState([])\n    const [yesterday, setYesterday] = useState('')\n\n    useEffect(() => {\n        // axios.get(process.env.REACT_APP_API_URL)\n        axios.get('https://kkoutbreak.herokuapp.com/info')\n        .then(result => setDayta(result.data))\n        // setLoaded(true)\n    },[])\n\n    useEffect(() => {\n        let cummulativeData = (dayta.map(datapoint => datapoint.data)).reverse()\n        let cummulativeDates = (dayta.map(datapoint => datapoint.label)).reverse()\n        setRecent([cummulativeData[0], cummulativeDates[0]])\n        setYesterday(cummulativeData[1])\n        setLoaded(true)\n        \n        // console.log(recent,yesterday)\n        let ctx = document.getElementById('mychart')\n        // console.log(dayta[0].data)\n\n        let data = {\n            labels: dayta.map(entry => entry.label),\n            datasets: [{\n                data: dayta.map(entry => entry.data),\n                label: 'Kota Kinabalu',\n                backgroundColor: 'purple',\n                borderColor: 'lightblue',\n                fill: false,\n                lineTension: 0.1\n            },{\n                data: dayta.map(entry => entry.cluster_data),\n                label: 'Kepayan Cluster',\n                backgroundColor: 'yellow',\n                borderColor: 'purple',\n                fill: false,\n                lineTension: 0.1\n            }]\n        }\n        \n        let chart = new Chart(ctx, {type: 'line', data:data, \n            options: {title: {display: true, text:'Covid-19 Cases in Kota Kinabalu'} , \n            scales: {xAxes: [{scaleLabel: {display:true, labelString:'Timeline'}}], yAxes: [{scaleLabel: {display:true, labelString:'Cases'}}] } \n        } })\n\n    },[dayta])\n\n\n\n    return(\n        <div style={{width: '80vw', height:'80vh', marginTop: '1vh', border:'2px solid lightGray', background: 'white', borderRadius: '10px'}}>\n        {/* { loaded ? <div style={{textAlign: 'center'}}>Recent Case Update: {recent[0]} (as of {recent[1]}) </div> : ''}\n        { loaded ? <div style={{textAlign:'center'}}>{parseInt(recent[0]) - parseInt(yesterday) >= 0 ? `Increased ${parseInt(recent[0] - parseInt(yesterday))}` : `decreased ${- parseInt(recent[0]) + parseInt(yesterday)}`}</div> :''} */}\n        {/* {rendering ? <canvas id='mychart' style={{width: '100%' , height:'100%'}}/> : 'page has not rendered fully'} */}\n        <canvas id='mychart' style={{width: '100%' , height:'100%'}}/> \n        </div>\n    )\n}\n\nexport default Graph","import React from 'react';\nimport { Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport moment from 'moment'\n\nconst Carde = ({recent, yesterday, kepayan}) => {\n\nconst redirect1 = () => {\n    window.open('https://sabahoutbreak.com', '_blank')\n}\n\nconst redirect2 = () => {\n    let time = (moment(recent[1])._i).split('/')\n    const montMapper = {\n        Jan : ['1', 'januari'],\n        Feb : ['2', 'februari'],\n        Mar : ['3', 'mac'],\n        Apr : ['4', 'april'],\n        May : ['5', 'mei'],\n        Jun : ['6', 'jun'],\n        Jul : ['7', 'julai'],\n        Aug : ['8', 'ogos'],\n        Sep : ['9', 'september'],\n        Oct : ['10', 'oktober'],\n        Nov : ['11', 'november'],\n        Dec : ['12', 'disember']\n    }\n    window.open(`https://kpkesihatan.com/${time[2]}/${montMapper[`${time[1]}`][0]}/${time[0]}/kenyataan-akhbar-kpk-${time[0]}-${montMapper[`${time[1]}`][1]}-${time[2]}-situasi-semasa-jangkitan-penyakit-coronavirus-2019-covid-19-di-malaysia/`, '_blank')\n}\n\nreturn(\n<div style={{marginTop:'1vh', width:'100vw', display:'flex'}}>\n    {/* <Row> */}\n    {/* <Col sm={{ size: '20vw'}}> */}\n    <div style={{width: '20vw'}} onClick={redirect1}>\n    <Card body inverse style={{ backgroundColor: '#333', borderColor: '#333' }}>\n        <CardTitle style={{textAlign:'center'}}>Recent KK Case Update</CardTitle>\n        <CardText style={{textAlign:'center'}}>{recent[0]}</CardText>\n        <CardText style={{textAlign:'center'}}>(as of {recent[1]}) </CardText>\n    </Card>\n    </div>\n    {/* </Col> */}\n\n    {/* <Col sm={{ size: '20vw'}}> */}\n    <div style={{width: '20vw'}} onClick={redirect2}>\n    <Card body inverse color='primary'>\n        <CardTitle style={{textAlign:'center'}}> Kepayan Cluster</CardTitle>\n        <CardText style={{textAlign:'center'}}>{kepayan}</CardText>\n        <CardText style={{textAlign:'center'}}>(as of {recent[1]})</CardText>\n    </Card>\n    </div>\n    {/* </Col> */}\n\n    <div style={{width: '20vw'}}>\n    <Card body inverse color='info'>\n        <CardTitle style={{textAlign:'center'}}> Local KK Cases</CardTitle>\n        <CardText style={{textAlign:'center'}}>{parseInt(recent[0]) - parseInt(kepayan)}</CardText>\n        <CardText style={{textAlign:'center'}}>(as of {recent[1]})</CardText>\n    </Card>\n    </div>\n\n    {/* <Col sm={{ size: '30vw'}}> */}\n    <div style={{width: '20vw'}}>\n    <Card body inverse color={parseInt(recent[0]) - parseInt(yesterday) > 0 ? 'danger' : 'success'}>\n        <CardTitle style={{textAlign:'center'}}>Progress Update</CardTitle>\n        <CardText style={{textAlign:'center'}}>{parseInt(recent[0]) - parseInt(yesterday) > 0 ? `${parseInt(recent[0]) - parseInt(yesterday)}↑` : `${parseInt(yesterday) - parseInt(recent[0])}↓`} </CardText>\n        <CardText style={{textAlign:'center'}}>({yesterday}→{recent[0]})</CardText>\n      </Card>\n    </div>\n    {/* </Col> */}\n\n\n    {/* </Row> */}\n</div>)\n}\n\nexport default Carde","import React, {useState, useEffect} from 'react';\nimport Graph from './components/Graph'\nimport Carde from './components/Card'\nimport axios from 'axios'\n\nfunction App() {\n  const [rendered, setRendered] = useState(false)\n  const [deets, setDeets] = useState([])\n  const [recent, setRecent] = useState([])\n  const [yesterday, setYesterday] = useState('')\n  const [kepayan, setKepayan] = useState('')\n\n  useEffect(() => {\n    // axios.get(process.env.REACT_APP_API_URL)\n    axios.get('https://kkoutbreak.herokuapp.com/info')\n    .then(\n      result => {\n        setDeets(result.data)\n      }\n    )\n  },[])\n\n  useEffect(() => {\n    let cummulativeData = (deets.map(datapoint => datapoint.data)).reverse()\n    let cummulativeDates = (deets.map(datapoint => datapoint.label)).reverse()\n    let cummulativeKepayan = (deets.map(datapoint => datapoint.cluster_data)).reverse()\n    setRecent([cummulativeData[0], cummulativeDates[0]])\n    setYesterday(cummulativeData[1])\n    setKepayan(cummulativeKepayan[0])\n    // setRendered(true)\n  },[deets])\n\n\n\n  return (\n    <div style={{ overflowX: 'hidden', overflowY: 'hidden' ,paddingLeft:'10vw', background:'lightBlue', height: '100vh'}}>\n      {/* { rendered ? <li style={{textAlign: 'center'}}>Recent KK Case Update: {recent[0]} (as of {recent[1]}) </li> : ''} */}\n      {/* { rendered ? <div style={{textAlign:'center'}}>{parseInt(recent[0]) - parseInt(yesterday) >= 0 ? `Increased ${parseInt(recent[0] - parseInt(yesterday))}` : `decreased ${- parseInt(recent[0]) + parseInt(yesterday)}`}</div> :''} */}\n      <Carde recent={recent} yesterday={yesterday} kepayan={kepayan}/>\n      <Graph />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}